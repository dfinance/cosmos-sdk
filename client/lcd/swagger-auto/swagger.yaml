definitions:
  Address:
    description: bech32 encoded address
    example: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
    type: string
  BaseReq:
    properties:
      account_number:
        example: "0"
        type: string
      chain_id:
        example: Cosmos-Hub
        type: string
      fees:
        items:
          $ref: '#/definitions/Coin'
        type: array
      from:
        description: Sender address or Keybase name to generate a transaction
        example: cosmos1g9ahr6xhht5rmqven628nklxluzyv8z9jqjcmc
        type: string
      gas:
        example: "200000"
        type: string
      gas_adjustment:
        example: "1.2"
        type: string
      memo:
        example: "Sent via Cosmos Voyager \U0001F680"
        type: string
      sequence:
        example: "1"
        type: string
      simulate:
        description: Estimate gas for a transaction (cannot be used in conjunction with generate_only)
        example: false
        type: boolean
    type: object
  Block:
    properties:
      evidence:
        items:
          type: string
        type: array
      header:
        $ref: '#/definitions/BlockHeader'
      last_commit:
        properties:
          block_id:
            $ref: '#/definitions/BlockID'
          precommits:
            items:
              properties:
                block_id:
                  $ref: '#/definitions/BlockID'
                height:
                  example: "0"
                  type: string
                round:
                  example: "0"
                  type: string
                signature:
                  example: 7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
                  type: string
                timestamp:
                  example: "2017-12-30T05:53:09.287+01:00"
                  type: string
                type:
                  example: 2
                  type: number
                validator_address:
                  type: string
                validator_index:
                  example: "0"
                  type: string
              type: object
            type: array
        type: object
      txs:
        items:
          type: string
        type: array
    type: object
  BlockHeader:
    properties:
      app_hash:
        $ref: '#/definitions/Hash'
      chain_id:
        example: cosmoshub-2
        type: string
      consensus_hash:
        $ref: '#/definitions/Hash'
      data_hash:
        $ref: '#/definitions/Hash'
      evidence_hash:
        $ref: '#/definitions/Hash'
      height:
        example: 1
        type: number
      last_block_id:
        $ref: '#/definitions/BlockID'
      last_commit_hash:
        $ref: '#/definitions/Hash'
      last_results_hash:
        $ref: '#/definitions/Hash'
      next_validators_hash:
        $ref: '#/definitions/Hash'
      num_txs:
        example: 0
        type: number
      proposer_address:
        $ref: '#/definitions/Address'
      time:
        example: "2017-12-30T05:53:09.287+01:00"
        type: string
      total_txs:
        example: 35
        type: number
      validators_hash:
        $ref: '#/definitions/Hash'
      version:
        properties:
          app:
            example: 0
            type: string
          block:
            example: 10
            type: string
        type: object
    type: object
  BlockID:
    properties:
      hash:
        $ref: '#/definitions/Hash'
      parts:
        properties:
          hash:
            $ref: '#/definitions/Hash'
          total:
            example: 0
            type: number
        type: object
    type: object
  BlockQuery:
    properties:
      block:
        $ref: '#/definitions/Block'
      block_meta:
        properties:
          block_id:
            $ref: '#/definitions/BlockID'
          header:
            $ref: '#/definitions/BlockHeader'
        type: object
    type: object
  BroadcastTxCommitResult:
    properties:
      check_tx:
        $ref: '#/definitions/CheckTxResult'
      deliver_tx:
        $ref: '#/definitions/DeliverTxResult'
      hash:
        $ref: '#/definitions/Hash'
      height:
        type: integer
    type: object
  CheckTxResult:
    example:
      code: 0
      data: data
      gas_used: 5000
      gas_wanted: 10000
      info: info
      log: log
      tags:
      - ""
      - ""
    properties:
      code:
        type: integer
      data:
        type: string
      gas_used:
        type: integer
      gas_wanted:
        type: integer
      info:
        type: string
      log:
        type: string
      tags:
        items:
          $ref: '#/definitions/KVPair'
        type: array
    type: object
  Coin:
    properties:
      amount:
        example: "50"
        type: string
      denom:
        example: stake
        type: string
    type: object
  Delegation:
    properties:
      balance:
        $ref: '#/definitions/Coin'
      delegator_address:
        type: string
      shares:
        type: string
      validator_address:
        type: string
    type: object
  DelegationDelegatorReward:
    properties:
      reward:
        items:
          $ref: '#/definitions/Coin'
        type: array
      validator_address:
        $ref: '#/definitions/ValidatorAddress'
    type: object
  DelegatorTotalRewards:
    properties:
      rewards:
        items:
          $ref: '#/definitions/DelegationDelegatorReward'
        type: array
      total:
        items:
          $ref: '#/definitions/Coin'
        type: array
    type: object
  DeliverTxResult:
    example:
      code: 5
      data: data
      gas_used: 5000
      gas_wanted: 10000
      info: info
      log: log
      tags:
      - ""
      - ""
    properties:
      code:
        type: integer
      data:
        type: string
      gas_used:
        type: integer
      gas_wanted:
        type: integer
      info:
        type: string
      log:
        type: string
      tags:
        items:
          $ref: '#/definitions/KVPair'
        type: array
    type: object
  Deposit:
    properties:
      amount:
        items:
          $ref: '#/definitions/Coin'
        type: array
      depositor:
        $ref: '#/definitions/Address'
      proposal_id:
        type: string
    type: object
  Hash:
    example: EE5F3404034C524501629B56E0DDC38FAD651F04
    type: string
  KVPair:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  Msg:
    type: string
  PaginatedQueryTxs:
    properties:
      count:
        example: 1
        type: number
      limit:
        example: 30
        type: number
      page_number:
        example: 1
        type: number
      page_total:
        example: 1
        type: number
      total_count:
        example: 1
        type: number
      txs:
        items:
          $ref: '#/definitions/TxQuery'
        type: array
    type: object
  ParamChange:
    properties:
      key:
        example: MaxValidators
        type: string
      subkey:
        example: ""
        type: string
      subspace:
        example: staking
        type: string
      value:
        type: object
    type: object
  Proposer:
    properties:
      proposal_id:
        type: string
      proposer:
        type: string
    type: object
  PublicKey:
    properties:
      type:
        type: string
      value:
        type: string
    type: object
  Redelegation:
    properties:
      delegator_address:
        type: string
      entries:
        items:
          $ref: '#/definitions/Redelegation'
        type: array
      validator_dst_address:
        type: string
      validator_src_address:
        type: string
    type: object
  RedelegationEntry:
    properties:
      balance:
        type: string
      completion_time:
        type: integer
      creation_height:
        type: integer
      initial_balance:
        type: string
      shares_dst:
        type: string
    type: object
  SigningInfo:
    properties:
      index_offset:
        type: string
      jailed_until:
        type: string
      missed_blocks_counter:
        type: string
      start_height:
        type: string
    type: object
  StdTx:
    properties:
      fee:
        properties:
          amount:
            items:
              $ref: '#/definitions/Coin'
            type: array
          gas:
            type: string
        type: object
      memo:
        type: string
      msg:
        items:
          $ref: '#/definitions/Msg'
        type: array
      signature:
        properties:
          account_number:
            example: "0"
            type: string
          pub_key:
            properties:
              type:
                example: tendermint/PubKeySecp256k1
                type: string
              value:
                example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                type: string
            type: object
          sequence:
            example: "0"
            type: string
          signature:
            example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
            type: string
        type: object
    type: object
  Supply:
    properties:
      total:
        items:
          $ref: '#/definitions/Coin'
        type: array
    type: object
  TallyResult:
    properties:
      abstain:
        example: "0.0000000000"
        type: string
      "false":
        example: "0.0000000000"
        type: string
      no_with_veto:
        example: "0.0000000000"
        type: string
      "true":
        example: "0.0000000000"
        type: string
    type: object
  TendermintValidator:
    properties:
      address:
        $ref: '#/definitions/ValidatorAddress'
      proposer_priority:
        example: "1000"
        type: string
      pub_key:
        example: cosmosvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf
        type: string
      voting_power:
        example: "1000"
        type: string
    type: object
  TextProposal:
    properties:
      description:
        type: string
      final_tally_result:
        $ref: '#/definitions/TallyResult'
      proposal_id:
        type: integer
      proposal_status:
        type: string
      proposal_type:
        type: string
      submit_time:
        type: string
      title:
        type: string
      total_deposit:
        items:
          $ref: '#/definitions/Coin'
        type: array
      voting_start_time:
        type: string
    type: object
  TxQuery:
    properties:
      hash:
        example: D085138D913993919295FF4B0A9107F1F2CDE0D37A87CE0644E217CBF3B49656
        type: string
      height:
        example: 368
        type: number
      result:
        properties:
          gas_used:
            example: "26354"
            type: string
          gas_wanted:
            example: "200000"
            type: string
          log:
            type: string
          tags:
            items:
              $ref: '#/definitions/KVPair'
            type: array
        type: object
      tx:
        $ref: '#/definitions/StdTx'
    type: object
  UnbondingDelegation:
    properties:
      balance:
        type: string
      creation_height:
        type: integer
      delegator_address:
        type: string
      initial_balance:
        type: string
      min_time:
        type: integer
      validator_address:
        type: string
    type: object
  UnbondingDelegationPair:
    properties:
      delegator_address:
        type: string
      entries:
        items:
          $ref: '#/definitions/UnbondingEntries'
        type: array
      validator_address:
        type: string
    type: object
  UnbondingEntries:
    properties:
      balance:
        type: string
      creation_height:
        type: string
      initial_balance:
        type: string
      min_time:
        type: string
    type: object
  Validator:
    properties:
      bond_height:
        example: "0"
        type: string
      bond_intra_tx_counter:
        example: 0
        type: integer
      commission:
        properties:
          max_change_rate:
            example: "0"
            type: string
          max_rate:
            example: "0"
            type: string
          rate:
            example: "0"
            type: string
          update_time:
            example: "1970-01-01T00:00:00Z"
            type: string
        type: object
      consensus_pubkey:
        example: cosmosvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf
        type: string
      delegator_shares:
        type: string
      description:
        properties:
          details:
            type: string
          identity:
            type: string
          moniker:
            type: string
          security_contact:
            type: string
          website:
            type: string
        type: object
      jailed:
        type: boolean
      operator_address:
        $ref: '#/definitions/ValidatorAddress'
      status:
        type: integer
      tokens:
        type: string
      unbonding_height:
        example: "0"
        type: string
      unbonding_time:
        example: "1970-01-01T00:00:00Z"
        type: string
    type: object
  ValidatorAddress:
    description: bech32 encoded address
    example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
    type: string
  ValidatorDistInfo:
    properties:
      operator_address:
        $ref: '#/definitions/ValidatorAddress'
      self_bond_rewards:
        items:
          $ref: '#/definitions/Coin'
        type: array
      val_commission:
        items:
          $ref: '#/definitions/Coin'
        type: array
    type: object
  Vote:
    properties:
      option:
        type: string
      proposal_id:
        type: string
      voter:
        type: string
    type: object
  auth.StdFee:
    $ref: '#/definitions/types.StdFee'
  auth.StdSignature:
    $ref: '#/definitions/types.StdSignature'
  rest.BaseReq:
    properties:
      account_number:
        type: integer
      chain_id:
        type: string
      fees:
        $ref: '#/definitions/types.Coins'
        type: object
      from:
        type: string
      gas:
        type: string
      gas_adjustment:
        type: string
      gas_prices:
        $ref: '#/definitions/types.DecCoins'
        type: object
      memo:
        type: string
      sequence:
        type: integer
      simulate:
        type: boolean
    type: object
  rest.DelegateRequest:
    properties:
      amount:
        $ref: '#/definitions/types.Coin'
        type: object
      base_req:
        $ref: '#/definitions/rest.BaseReq'
        type: object
      delegator_address:
        description: in bech32
        example: wallet13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
      validator_address:
        description: in bech32
        example: wallet13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
    type: object
  rest.ErrorResponse:
    properties:
      code:
        type: integer
      error:
        type: string
    type: object
  rest.RedelegateRequest:
    properties:
      amount:
        $ref: '#/definitions/types.Coin'
        type: object
      base_req:
        $ref: '#/definitions/rest.BaseReq'
        type: object
      delegator_address:
        description: in bech32
        example: wallet13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
      validator_dst_address:
        description: in bech32
        example: wallet13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
      validator_src_address:
        description: in bech32
        example: wallet13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
    type: object
  rest.SwaggerValidatorDistInfo:
    properties:
      operator_address:
        example: wallet13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
      self_bond_rewards:
        $ref: '#/definitions/types.DecCoins'
        type: object
      validator_commission:
        $ref: '#/definitions/types.DecCoins'
        type: object
    type: object
  rest.TxBeginRedelegate:
    properties:
      fee:
        $ref: '#/definitions/auth.StdFee'
        type: object
      memo:
        type: string
      msg:
        items:
          $ref: '#/definitions/types.MsgBeginRedelegate'
        type: array
      signatures:
        items:
          $ref: '#/definitions/auth.StdSignature'
        type: array
    type: object
  rest.TxFundPublicTreasuryPool:
    properties:
      fee:
        $ref: '#/definitions/auth.StdFee'
        type: object
      memo:
        type: string
      msg:
        items:
          $ref: '#/definitions/types.MsgFundPublicTreasuryPool'
        type: array
      signatures:
        items:
          $ref: '#/definitions/auth.StdSignature'
        type: array
    type: object
  rest.TxSetWithdrawAddress:
    properties:
      fee:
        $ref: '#/definitions/auth.StdFee'
        type: object
      memo:
        type: string
      msg:
        items:
          $ref: '#/definitions/types.MsgSetWithdrawAddress'
        type: array
      signatures:
        items:
          $ref: '#/definitions/auth.StdSignature'
        type: array
    type: object
  rest.TxUndelegate:
    properties:
      fee:
        $ref: '#/definitions/auth.StdFee'
        type: object
      memo:
        type: string
      msg:
        items:
          $ref: '#/definitions/types.MsgUndelegate'
        type: array
      signatures:
        items:
          $ref: '#/definitions/auth.StdSignature'
        type: array
    type: object
  rest.TxWithdrawDelegatorReward:
    properties:
      fee:
        $ref: '#/definitions/auth.StdFee'
        type: object
      memo:
        type: string
      msg:
        items:
          $ref: '#/definitions/types.MsgWithdrawDelegatorReward'
        type: array
      signatures:
        items:
          $ref: '#/definitions/auth.StdSignature'
        type: array
    type: object
  rest.UndelegateRequest:
    properties:
      amount:
        $ref: '#/definitions/types.Coin'
        type: object
      base_req:
        $ref: '#/definitions/rest.BaseReq'
        type: object
      delegator_address:
        description: in bech32
        example: wallet13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
      validator_address:
        description: in bech32
        example: wallet13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
    type: object
  rest.fundPublicTreasuryPoolReq:
    properties:
      amount:
        $ref: '#/definitions/types.Coins'
        type: object
      base_req:
        $ref: '#/definitions/rest.BaseReq'
        type: object
    type: object
  rest.setWithdrawalAddrReq:
    properties:
      base_req:
        $ref: '#/definitions/rest.BaseReq'
        type: object
      withdraw_address:
        $ref: '#/definitions/types.AccAddress'
        type: object
    type: object
  rest.withdrawRewardsReq:
    properties:
      base_req:
        $ref: '#/definitions/rest.BaseReq'
        type: object
    type: object
  types.ABCIMessageLog:
    properties:
      events:
        $ref: '#/definitions/types.StringEvents'
        description: |-
          Events contains a slice of Event objects that were emitted during some
          execution.
        type: object
      log:
        type: string
      msg_index:
        type: integer
    type: object
  types.ABCIMessageLogs:
    items:
      $ref: '#/definitions/types.ABCIMessageLog'
    type: array
  types.AccAddress:
    items:
      type: integer
    type: array
  types.Attribute:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  types.Coin:
    properties:
      amount:
        description: |-
          To allow the use of unsigned integers (see: #1273) a larger refactor will
          need to be made. So we use signed integers for now with safety measures in
          place preventing negative values being used.
        example: "100"
        format: number
        type: string
      denom:
        example: stake
        type: string
    type: object
  types.Coins:
    items:
      $ref: '#/definitions/types.Coin'
    type: array
  types.Commission:
    properties:
      max_change_rate:
        description: maximum daily increase of the validator commission, as a fraction
        example: "0.5"
        format: number
        type: string
      max_rate:
        description: maximum commission rate which validator can ever charge, as a fraction
        example: "0.3"
        format: number
        type: string
      rate:
        description: the commission rate charged to delegators, as a fraction
        example: "0.1"
        format: number
        type: string
      update_time:
        description: the last time the commission rate was changed
        type: string
    type: object
  types.Dec:
    type: object
  types.DecCoin:
    properties:
      amount:
        example: "100"
        format: number
        type: string
      denom:
        example: stake
        type: string
    type: object
  types.DecCoins:
    items:
      $ref: '#/definitions/types.DecCoin'
    type: array
  types.Delegation:
    properties:
      bonding_shares:
        example: "0.1"
        format: number
        type: string
      delegator_address:
        example: wallet13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
      lp_shares:
        example: "0.5"
        format: number
        type: string
      validator_address:
        example: walletval13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
    type: object
  types.DelegationDelegatorReward:
    properties:
      reward:
        $ref: '#/definitions/types.DecCoins'
        type: object
      validator_address:
        example: wallet13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
    type: object
  types.DelegationResponse:
    properties:
      bonding_balance:
        type: string
      bonding_shares:
        example: "0.1"
        format: number
        type: string
      delegator_address:
        example: wallet13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
      lp_balance:
        type: string
      lp_shares:
        example: "0.5"
        format: number
        type: string
      validator_address:
        example: walletval13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
    type: object
  types.Description:
    properties:
      details:
        description: optional details
        type: string
      identity:
        description: optional identity signature (ex. UPort or Keybase)
        type: string
      moniker:
        description: name
        type: string
      security_contact:
        description: optional security contact info
        type: string
      website:
        description: optional website link
        type: string
    type: object
  types.HistoricalInfo:
    properties:
      header:
        type: string
      valset:
        items:
          $ref: '#/definitions/types.Validator'
        type: array
    type: object
  types.Int:
    type: object
  types.Msg:
    type: object
  types.MsgBeginRedelegate:
    properties:
      amount:
        $ref: '#/definitions/types.Coin'
        type: object
      delegator_address:
        example: wallet13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
      validator_dst_address:
        example: wallet13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
      validator_src_address:
        example: wallet13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
    type: object
  types.MsgDelegate:
    properties:
      amount:
        $ref: '#/definitions/types.Coin'
        type: object
      delegator_address:
        example: wallet13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
      validator_address:
        example: wallet13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
    type: object
  types.MsgFundPublicTreasuryPool:
    properties:
      amount:
        $ref: '#/definitions/types.Coins'
        type: object
      depositor:
        $ref: '#/definitions/types.AccAddress'
        type: object
    type: object
  types.MsgSetWithdrawAddress:
    properties:
      delegator_address:
        $ref: '#/definitions/types.AccAddress'
        type: object
      withdraw_address:
        $ref: '#/definitions/types.AccAddress'
        type: object
    type: object
  types.MsgUndelegate:
    properties:
      amount:
        $ref: '#/definitions/types.Coin'
        type: object
      delegator_address:
        example: wallet13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
      validator_address:
        example: wallet13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
    type: object
  types.MsgWithdrawDelegatorReward:
    properties:
      delegator_address:
        $ref: '#/definitions/types.AccAddress'
        type: object
      validator_address:
        $ref: '#/definitions/types.ValAddress'
        type: object
    type: object
  types.Params:
    properties:
      max_memo_characters:
        type: integer
      sig_verify_cost_ed25519:
        type: integer
      sig_verify_cost_secp256k1:
        type: integer
      tx_sig_limit:
        type: integer
      tx_size_cost_per_byte:
        type: integer
    type: object
  types.Pool:
    properties:
      bonded_tokens:
        description: Bonding tokens which are currently bonded to a validators
        example: "50000"
        format: integer
        type: string
      liquidity_tokens:
        description: Liquidity tokens which are currently bonded to a validators
        example: "10000"
        format: integer
        type: string
      not_bonded_tokens:
        description: Bonding tokens which are not bonded to a validators (unbonded or unbonding)
        example: "500"
        format: string
        type: string
    type: object
  types.RedelegationEntry:
    properties:
      completion_time:
        description: Time at which the redelegation will complete
        type: string
      creation_height:
        description: Height at which the redelegation took place
        type: integer
      initial_balance:
        description: Initial balance when redelegation started
        example: "100"
        format: integer
        type: string
      op_type:
        description: Operation type
        example: bonding
        type: string
      shares_dst:
        description: Amount of destination-validator shares created by redelegation
        example: "0.1"
        format: number
        type: string
    type: object
  types.RedelegationEntryResponse:
    properties:
      balance:
        format: integer
        type: string
      completion_time:
        description: Time at which the redelegation will complete
        type: string
      creation_height:
        description: Height at which the redelegation took place
        type: integer
      initial_balance:
        description: Initial balance when redelegation started
        example: "100"
        format: integer
        type: string
      op_type:
        description: Operation type
        example: bonding
        type: string
      shares_dst:
        description: Amount of destination-validator shares created by redelegation
        example: "0.1"
        format: number
        type: string
    type: object
  types.RedelegationResponse:
    properties:
      delegator_address:
        description: delegator
        example: wallet13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
      entries:
        items:
          $ref: '#/definitions/types.RedelegationEntryResponse'
        type: array
      validator_dst_address:
        description: validator redelegation destination operator addr
        example: walletval13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
      validator_src_address:
        description: validator redelegation source operator addr
        example: walletval13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
    type: object
  types.SearchTxsResult:
    properties:
      count:
        description: Count of txs in current page
        type: integer
      limit:
        description: Max count txs per page
        type: integer
      page_number:
        description: Index of current page, start from 1
        type: integer
      page_total:
        description: Count of total pages
        type: integer
      total_count:
        description: Count of all txs
        type: integer
      txs:
        description: List of txs in current page
        items:
          $ref: '#/definitions/types.TxResponse'
        type: array
    type: object
  types.StdFee:
    properties:
      amount:
        $ref: '#/definitions/types.Coins'
        type: object
      gas:
        type: integer
    type: object
  types.StdSignature:
    properties:
      signature:
        items:
          type: integer
        type: array
    type: object
  types.StdTx:
    properties:
      fee:
        $ref: '#/definitions/types.StdFee'
        type: object
      memo:
        type: string
      msg:
        items:
          $ref: '#/definitions/types.Msg'
        type: array
      signatures:
        items:
          $ref: '#/definitions/types.StdSignature'
        type: array
    type: object
  types.StringEvent:
    properties:
      attributes:
        items:
          $ref: '#/definitions/types.Attribute'
        type: array
      type:
        type: string
    type: object
  types.StringEvents:
    items:
      $ref: '#/definitions/types.StringEvent'
    type: array
  types.Tx:
    type: object
  types.TxResponse:
    properties:
      code:
        type: integer
      codespace:
        type: string
      data:
        type: string
      gas_used:
        type: integer
      gas_wanted:
        type: integer
      height:
        type: integer
      info:
        type: string
      logs:
        $ref: '#/definitions/types.ABCIMessageLogs'
        type: object
      raw_log:
        type: string
      timestamp:
        type: string
      tx:
        $ref: '#/definitions/types.Tx'
        type: object
      txhash:
        type: string
    type: object
  types.UnbondingDelegation:
    properties:
      delegator_address:
        description: delegator
        example: wallet13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
      entries:
        description: unbonding delegation entries
        items:
          $ref: '#/definitions/types.UnbondingDelegationEntry'
        type: array
      validator_address:
        description: validator unbonding from operator addr
        example: wallet13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
    type: object
  types.UnbondingDelegationEntry:
    properties:
      balance:
        description: Tokens to receive at completion
        example: "1000"
        format: integer
        type: string
      completion_time:
        description: Time at which the unbonding delegation will complete
        type: string
      creation_height:
        description: Height which the unbonding took place
        type: integer
      initial_balance:
        description: Tokens initially scheduled to receive at completion
        example: "1000"
        format: integer
        type: string
      op_type:
        description: Operation type
        example: bonding
        type: string
    type: object
  types.ValAddress:
    items:
      type: integer
    type: array
  types.Validator:
    properties:
      bonding:
        $ref: '#/definitions/types.ValidatorTokens'
        description: Delegated bonding tokens (incl. self-delegation)
        type: object
      commission:
        $ref: '#/definitions/types.Commission'
        description: Commission parameters
        type: object
      consensus_pubkey:
        description: Consensus public key of the validator; bech encoded in JSON
        type: string
      description:
        $ref: '#/definitions/types.Description'
        description: Description terms for the validator
        type: object
      jailed:
        description: Has the validator been jailed from bonded status?
        type: boolean
      lp:
        $ref: '#/definitions/types.ValidatorTokens'
        description: Delegated liquidity tokens
        type: object
      min_self_delegation:
        description: Validator's self declared minimum self delegation
        example: "1000"
        format: integer
        type: string
      operator_address:
        description: Address of the validator's operator; bech encoded in JSON
        example: wallet13jyjuz3kkdvqw8u4qfkwd94emdl3vx394kn07h
        format: bech32
        type: string
      scheduled_to_unbond:
        description: Has the validator been scheduled to force unbond due to low SelfStake amount compared to TotalDelegationsAmount
        type: boolean
      scheduled_unbond_height:
        description: If ScheduledToUnbond, height at which this schedule started
        type: integer
      scheduled_unbond_time:
        description: Is ScheduledToUnbond, min time for the validator to begin force unbond
        type: string
      status:
        description: Validator status (bonded/unbonding/unbonded)
        example: bonded
        type: string
      unbonding_height:
        description: If unbonding, height at which this validator has begun unbonding
        type: integer
      unbonding_time:
        description: If unbonding, min time for the validator to complete unbonding
        type: string
    type: object
  types.ValidatorTokens:
    properties:
      delegator_shares:
        description: Total shares issued to a validator's delegators
        example: "0.123"
        format: number
        type: string
      tokens:
        description: Delegated tokens (incl. self-delegation for bonding tokens)
        example: "100"
        format: integer
        type: string
    type: object
host: stargate.cosmos.network
info:
  contact: {}
  description: A REST interface for state queries, transaction generation and broadcasting.
  license: {}
  title: Gaia-Lite for Cosmos
  version: "3.0"
paths:
  /auth/accounts/{address}:
    get:
      parameters:
      - description: Account address
        in: path
        name: address
        required: true
        type: string
        x-example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
      produces:
      - application/json
      responses:
        "200":
          description: Account information on the blockchain
          schema:
            properties:
              type:
                type: string
              value:
                properties:
                  account_number:
                    type: string
                  address:
                    type: string
                  coins:
                    items:
                      $ref: '#/definitions/Coin'
                    type: array
                  public_key:
                    $ref: '#/definitions/PublicKey'
                  sequence:
                    type: string
                type: object
            type: object
        "500":
          description: Server internel error
      summary: Get the account information on blockchain
      tags:
      - Auth
  /bank/accounts/{address}/transfers:
    post:
      consumes:
      - application/json
      parameters:
      - description: Account address in bech32 format
        in: path
        name: address
        required: true
        type: string
        x-example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
      - description: The sender and tx information
        in: body
        name: account
        required: true
        schema:
          properties:
            amount:
              items:
                $ref: '#/definitions/Coin'
              type: array
            base_req:
              $ref: '#/definitions/BaseReq'
          type: object
      produces:
      - application/json
      responses:
        "202":
          description: Tx was succesfully generated
          schema:
            $ref: '#/definitions/StdTx'
        "400":
          description: Invalid request
        "500":
          description: Server internal error
      summary: Send coins from one account to another
      tags:
      - Bank
  /bank/balances/{address}:
    get:
      parameters:
      - description: Account address in bech32 format
        in: path
        name: address
        required: true
        type: string
        x-example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
      produces:
      - application/json
      responses:
        "200":
          description: Account balances
          schema:
            items:
              $ref: '#/definitions/Coin'
            type: array
        "500":
          description: Server internal error
      summary: Get the account balances
      tags:
      - Bank
  /blocks/{height}:
    get:
      parameters:
      - description: Block height
        in: path
        name: height
        required: true
        type: number
        x-example: 1
      produces:
      - application/json
      responses:
        "200":
          description: The block at a specific height
          schema:
            $ref: '#/definitions/BlockQuery'
        "400":
          description: Invalid height
        "404":
          description: Request block height doesn't
        "500":
          description: Server internal error
      summary: Get a block at a certain height
      tags:
      - Tendermint RPC
  /blocks/latest:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: The latest block
          schema:
            $ref: '#/definitions/BlockQuery'
        "500":
          description: Server internal error
      summary: Get the latest block
      tags:
      - Tendermint RPC
  /distribution/community_pool:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Coin'
            type: array
        "500":
          description: Internal Server Error
      summary: Community pool parameters
      tags:
      - Distribution
  /distribution/delegators/{delegatorAddr}/rewards:
    get:
      consumes:
      - application/json
      description: Get the sum of all the rewards earned by delegations by a single delegator
      operationId: distributionGetDelegatorRewards
      parameters:
      - description: Bech32 AccAddress of Delegator
        in: path
        name: delegatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.DelegationDelegatorReward'
            type: array
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Get the total rewards balance from all delegations
      tags:
      - Distribution
    post:
      consumes:
      - application/json
      description: Withdraw all the delegator's delegation rewards
      operationId: distributionPostWithdrawDelegatorRewards
      parameters:
      - description: WithdrawRewardsReq request with signed transaction
        in: body
        name: postRequest
        required: true
        schema:
          $ref: '#/definitions/rest.withdrawRewardsReq'
      - description: Bech32 AccAddress of Delegator
        in: path
        name: delegatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/rest.TxWithdrawDelegatorReward'
            type: array
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Withdraw all the delegator's delegation rewards
      tags:
      - Distribution
  /distribution/delegators/{delegatorAddr}/rewards/{validatorAddr}:
    get:
      consumes:
      - application/json
      description: Query a single delegation reward by a delegator
      operationId: distributionGetDelegationRewards
      parameters:
      - description: Bech32 AccAddress of Delegator
        in: path
        name: delegatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.DecCoin'
            type: array
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Query a delegation reward
      tags:
      - Distribution
    post:
      consumes:
      - application/json
      description: Withdraw a delegator's delegation reward from a single validator
      operationId: distributionPostWithdrawDelegationRewards
      parameters:
      - description: WithdrawRewardsReq request with signed transaction
        in: body
        name: postRequest
        required: true
        schema:
          $ref: '#/definitions/rest.withdrawRewardsReq'
      - description: Bech32 AccAddress of Delegator
        in: path
        name: delegatorAddr
        required: true
        type: string
      - description: Bech32 OperatorAddress of validator
        in: path
        name: validatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/rest.TxWithdrawDelegatorReward'
            type: array
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Withdraw a delegation reward
      tags:
      - Distribution
  /distribution/delegators/{delegatorAddr}/withdraw_address:
    get:
      consumes:
      - application/json
      description: Get the delegations' rewards withdrawal address. This is the address in which the user will receive the reward funds
      operationId: distributionGetDelegatorWithdrawalAddr
      parameters:
      - description: Bech32 AccAddress of Delegator
        in: path
        name: delegatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Bech32 AccAddress of the rewards withdrawal address
          schema:
            type: string
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Get the rewards withdrawal address
      tags:
      - Distribution
    post:
      consumes:
      - application/json
      description: Withdraw a delegator's delegation reward from a single validator
      operationId: distributionPostSetDelegatorWithdrawalAddr
      parameters:
      - description: SetWithdrawalAddrReq request with signed transaction
        in: body
        name: postRequest
        required: true
        schema:
          $ref: '#/definitions/rest.setWithdrawalAddrReq'
      - description: Bech32 AccAddress of Delegator
        in: path
        name: delegatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/rest.TxSetWithdrawAddress'
            type: array
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Withdraw a delegation reward
      tags:
      - Distribution
  /distribution/parameters:
    get:
      consumes:
      - application/json
      description: Fee distribution parameters
      operationId: distributionGetParams
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Params'
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Fee distribution parameters
      tags:
      - Distribution
  /distribution/pool/{poolName}:
    get:
      consumes:
      - application/json
      description: Get the amount held in the specified pool
      operationId: distributionPool
      parameters:
      - description: 'PoolName: LiquidityProvidersPool, FoundationPool, PublicTreasuryPool, HARP'
        in: path
        name: poolName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DecCoins'
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Get the amount held in the specified pool
      tags:
      - Distribution
  /distribution/public_treasury_pool:
    post:
      consumes:
      - application/json
      description: Fund the public treasury pool
      operationId: distributionPostWithdrawValidatorRewards
      parameters:
      - description: FundPublicTreasuryPoolReq request with signed transaction
        in: body
        name: postRequest
        required: true
        schema:
          $ref: '#/definitions/rest.fundPublicTreasuryPoolReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/rest.TxFundPublicTreasuryPool'
            type: array
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Fund the public treasury pool
      tags:
      - Distribution
  /distribution/validators/{validatorAddr}:
    get:
      consumes:
      - application/json
      description: Query the distribution information of a single validator
      operationId: distributionGetValidatorInfo
      parameters:
      - description: Bech32 OperatorAddress of validator
        in: path
        name: validatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.SwaggerValidatorDistInfo'
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Validator distribution information
      tags:
      - Distribution
  /distribution/validators/{validatorAddr}/outstanding_rewards:
    get:
      consumes:
      - application/json
      description: Fee distribution outstanding rewards of a single validator
      operationId: distributionOutstandingRewards
      parameters:
      - description: Bech32 OperatorAddress of validator
        in: path
        name: validatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DecCoins'
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Fee distribution outstanding rewards of a single validator
      tags:
      - Distribution
  /distribution/validators/{validatorAddr}/rewards:
    get:
      consumes:
      - application/json
      description: Query the commission and self-delegation rewards of validator
      operationId: distributionGetValidatorRewards
      parameters:
      - description: Bech32 OperatorAddress of validator
        in: path
        name: validatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DecCoins'
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Commission and self-delegation rewards of a single validator
      tags:
      - Distribution
    post:
      consumes:
      - application/json
      description: Withdraw the validator's self-delegation and commissions rewards
      operationId: distributionPostWithdrawValidatorRewards
      parameters:
      - description: WithdrawRewardsReq request with signed transaction
        in: body
        name: postRequest
        required: true
        schema:
          $ref: '#/definitions/rest.withdrawRewardsReq'
      - description: Bech32 OperatorAddress of validator
        in: path
        name: validatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.StdTx'
            type: array
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Withdraw the validator's rewards
      tags:
      - Distribution
  /gov/parameters/deposit:
    get:
      description: Query governance deposit parameters. The max_deposit_period units are in nanoseconds.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              max_deposit_period:
                example: "86400000000000"
                type: string
              min_deposit:
                items:
                  $ref: '#/definitions/Coin'
                type: array
            type: object
        "400":
          description: <other_path> is not a valid query request path
        "404":
          description: Found no deposit parameters
        "500":
          description: Internal Server Error
      summary: Query governance deposit parameters
      tags:
      - Governance
  /gov/parameters/tallying:
    get:
      description: Query governance tally parameters
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              governance_penalty:
                example: "0.0100000000"
                type: string
              threshold:
                example: "0.5000000000"
                type: string
              veto:
                example: "0.3340000000"
                type: string
        "400":
          description: <other_path> is not a valid query request path
        "404":
          description: Found no tally parameters
        "500":
          description: Internal Server Error
      summary: Query governance tally parameters
      tags:
      - Governance
  /gov/parameters/voting:
    get:
      description: Query governance voting parameters. The voting_period units are in nanoseconds.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              voting_period:
                example: "86400000000000"
                type: string
        "400":
          description: <other_path> is not a valid query request path
        "404":
          description: Found no voting parameters
        "500":
          description: Internal Server Error
      summary: Query governance voting parameters
      tags:
      - Governance
  /gov/proposals:
    get:
      description: Query proposals information with parameters
      parameters:
      - description: voter address
        in: query
        name: voter
        required: false
        type: string
      - description: depositor address
        in: query
        name: depositor
        required: false
        type: string
      - description: proposal status, valid values can be `"deposit_period"`, `"voting_period"`, `"passed"`, `"rejected"`
        in: query
        name: status
        required: false
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/TextProposal'
            type: array
        "400":
          description: Invalid query parameters
        "500":
          description: Internal Server Error
      summary: Query proposals
      tags:
      - Governance
    post:
      consumes:
      - application/json
      description: Send transaction to submit a proposal
      parameters:
      - description: valid value of `"proposal_type"` can be `"text"`, `"parameter_change"`, `"software_upgrade"`
        in: body
        name: post_proposal_body
        required: true
        schema:
          properties:
            base_req:
              $ref: '#/definitions/BaseReq'
            description:
              type: string
            initial_deposit:
              items:
                $ref: '#/definitions/Coin'
              type: array
            proposal_type:
              example: text
              type: string
            proposer:
              $ref: '#/definitions/Address'
            title:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Tx was succesfully generated
          schema:
            $ref: '#/definitions/StdTx'
        "400":
          description: Invalid proposal body
        "500":
          description: Internal Server Error
      summary: Submit a proposal
      tags:
      - Governance
  /gov/proposals/{proposalId}:
    get:
      description: Query a proposal by id
      parameters:
      - in: path
        name: proposalId
        required: true
        type: string
        x-example: "2"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TextProposal'
        "400":
          description: Invalid proposal id
        "500":
          description: Internal Server Error
      summary: Query a proposal
      tags:
      - Governance
  /gov/proposals/{proposalId}/deposits:
    get:
      description: Query deposits by proposalId
      parameters:
      - in: path
        name: proposalId
        required: true
        type: string
        x-example: "2"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Deposit'
            type: array
        "400":
          description: Invalid proposal id
        "500":
          description: Internal Server Error
      summary: Query deposits
      tags:
      - Governance
    post:
      consumes:
      - application/json
      description: Send transaction to deposit tokens to a proposal
      parameters:
      - description: proposal id
        in: path
        name: proposalId
        required: true
        type: string
        x-example: "2"
      - description: ""
        in: body
        name: post_deposit_body
        required: true
        schema:
          properties:
            amount:
              items:
                $ref: '#/definitions/Coin'
              type: array
            base_req:
              $ref: '#/definitions/BaseReq'
            depositor:
              $ref: '#/definitions/Address'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BroadcastTxCommitResult'
        "400":
          description: Invalid proposal id or deposit body
        "401":
          description: Key password is wrong
        "500":
          description: Internal Server Error
      summary: Deposit tokens to a proposal
      tags:
      - Governance
  /gov/proposals/{proposalId}/deposits/{depositor}:
    get:
      description: Query deposit by proposalId and depositor address
      parameters:
      - description: proposal id
        in: path
        name: proposalId
        required: true
        type: string
        x-example: "2"
      - description: Bech32 depositor address
        in: path
        name: depositor
        required: true
        type: string
        x-example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Deposit'
        "400":
          description: Invalid proposal id or depositor address
        "404":
          description: Found no deposit
        "500":
          description: Internal Server Error
      summary: Query deposit
      tags:
      - Governance
  /gov/proposals/{proposalId}/proposer:
    get:
      description: Query for the proposer for a proposal
      parameters:
      - in: path
        name: proposalId
        required: true
        type: string
        x-example: "2"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Proposer'
        "400":
          description: Invalid proposal ID
        "500":
          description: Internal Server Error
      summary: Query proposer
      tags:
      - Governance
  /gov/proposals/{proposalId}/tally:
    get:
      description: Gets a proposal's tally result at the current time. If the proposal is pending deposits (i.e status 'DepositPeriod') it returns an empty tally result.
      parameters:
      - description: proposal id
        in: path
        name: proposalId
        required: true
        type: string
        x-example: "2"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TallyResult'
        "400":
          description: Invalid proposal id
        "500":
          description: Internal Server Error
      summary: Get a proposal's tally result at the current time
      tags:
      - Governance
  /gov/proposals/{proposalId}/votes:
    get:
      description: Query voters information by proposalId
      parameters:
      - description: proposal id
        in: path
        name: proposalId
        required: true
        type: string
        x-example: "2"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Vote'
            type: array
        "400":
          description: Invalid proposal id
        "500":
          description: Internal Server Error
      summary: Query voters
      tags:
      - Governance
    post:
      consumes:
      - application/json
      description: Send transaction to vote a proposal
      parameters:
      - description: proposal id
        in: path
        name: proposalId
        required: true
        type: string
        x-example: "2"
      - description: valid value of `"option"` field can be `"yes"`, `"no"`, `"no_with_veto"` and `"abstain"`
        in: body
        name: post_vote_body
        required: true
        schema:
          properties:
            base_req:
              $ref: '#/definitions/BaseReq'
            option:
              example: "yes"
              type: string
            voter:
              $ref: '#/definitions/Address'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BroadcastTxCommitResult'
        "400":
          description: Invalid proposal id or vote body
        "401":
          description: Key password is wrong
        "500":
          description: Internal Server Error
      summary: Vote a proposal
      tags:
      - Governance
  /gov/proposals/{proposalId}/votes/{voter}:
    get:
      description: Query vote information by proposal Id and voter address
      parameters:
      - description: proposal id
        in: path
        name: proposalId
        required: true
        type: string
        x-example: "2"
      - description: Bech32 voter address
        in: path
        name: voter
        required: true
        type: string
        x-example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Vote'
        "400":
          description: Invalid proposal id or voter address
        "404":
          description: Found no vote
        "500":
          description: Internal Server Error
      summary: Query vote
      tags:
      - Governance
  /gov/proposals/param_change:
    post:
      consumes:
      - application/json
      description: Generate a parameter change proposal transaction
      parameters:
      - description: The parameter change proposal body that contains all parameter changes
        in: body
        name: post_proposal_body
        required: true
        schema:
          properties:
            base_req:
              $ref: '#/definitions/BaseReq'
            changes:
              items:
                $ref: '#/definitions/ParamChange'
              type: array
            deposit:
              items:
                $ref: '#/definitions/Coin'
              type: array
            description:
              type: string
              x-example: Update max validators
            proposer:
              $ref: '#/definitions/Address'
            title:
              type: string
              x-example: Param Change
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: The transaction was succesfully generated
          schema:
            $ref: '#/definitions/StdTx'
        "400":
          description: Invalid proposal body
        "500":
          description: Internal Server Error
      summary: Generate a parameter change proposal transaction
      tags:
      - Governance
  /minting/annual-provisions:
    get:
      consumes:
      - application/json
      description: Current minting annual provisions value
      operationId: mintingGetAnnualProvisions
      produces:
      - application/json
      responses:
        "200":
          description: Annual Provisions in the decimal type
          schema:
            type: string
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Current minting annual provisions value
      tags:
      - Mint
  /minting/inflation:
    get:
      consumes:
      - application/json
      description: Current minting inflation value
      operationId: mintingGetInflation
      produces:
      - application/json
      responses:
        "200":
          description: inflation in the decimal type
          schema:
            type: string
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Current minting inflation value
      tags:
      - Mint
  /minting/parameters:
    get:
      consumes:
      - application/json
      description: Minting module parameters
      operationId: mintingGetParams
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Params'
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Minting module parameters
      tags:
      - Mint
  /node_info:
    get:
      description: Information about the connected node
      produces:
      - application/json
      responses:
        "200":
          description: Node status
          schema:
            properties:
              application_version:
                properties:
                  build_tags:
                    type: string
                  client_name:
                    type: string
                  commit:
                    type: string
                  go:
                    type: string
                  name:
                    type: string
                  server_name:
                    type: string
                  version:
                    type: string
              node_info:
                properties:
                  channels:
                    type: string
                  id:
                    type: string
                  listen_addr:
                    example: 192.168.56.1:26656
                    type: string
                  moniker:
                    example: validator-name
                    type: string
                  network:
                    example: gaia-2
                    type: string
                  other:
                    description: more information on versions
                    properties:
                      rpc_address:
                        example: tcp://0.0.0.0:26657
                        type: string
                      tx_index:
                        example: true
                        type: string
                    type: object
                  protocol_version:
                    properties:
                      app:
                        example: 0
                        type: string
                      block:
                        example: 10
                        type: string
                      p2p:
                        example: 7
                        type: string
                  version:
                    description: Tendermint version
                    example: 0.15.0
                    type: string
            type: object
        "500":
          description: Failed to query node status
      summary: The properties of the connected node
      tags:
      - Tendermint RPC
  /slashing/parameters:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              double_sign_unbond_duration:
                type: string
              downtime_unbond_duration:
                type: string
              max_evidence_age:
                type: string
              min_signed_per_window:
                type: string
              signed_blocks_window:
                type: string
              slash_fraction_double_sign:
                type: string
              slash_fraction_downtime:
                type: string
            type: object
        "500":
          description: Internal Server Error
      summary: Get the current slashing parameters
      tags:
      - Slashing
  /slashing/signing_infos:
    get:
      description: Get sign info of all validators
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
        x-example: 1
      - description: Maximum number of items per page
        in: query
        name: limit
        required: true
        type: integer
        x-example: 5
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/SigningInfo'
            type: array
        "400":
          description: Invalid validator public key for one of the validators
        "500":
          description: Internal Server Error
      summary: Get sign info of given all validators
      tags:
      - Slashing
  /slashing/validators/{validatorAddr}/unjail:
    post:
      consumes:
      - application/json
      description: Send transaction to unjail a jailed validator
      parameters:
      - description: Bech32 validator address
        in: path
        name: validatorAddr
        required: true
        type: string
        x-example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
      - description: ""
        in: body
        name: UnjailBody
        required: true
        schema:
          properties:
            base_req:
              $ref: '#/definitions/StdTx'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Tx was succesfully generated
          schema:
            $ref: '#/definitions/BroadcastTxCommitResult'
        "400":
          description: Invalid validator address or base_req
        "500":
          description: Internal Server Error
      summary: Unjail a jailed validator
      tags:
      - Slashing
  /staking/delegators/{delegatorAddr}/delegations:
    get:
      consumes:
      - application/json
      description: Get all delegations from a delegator
      operationId: stakingGetDelegatorDelegations
      parameters:
      - description: Bech32 AccAddress of Delegator
        in: path
        name: delegatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.DelegationResponse'
            type: array
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Get all delegations from a delegator
      tags:
      - Staking
    post:
      consumes:
      - application/json
      description: Submit delegation
      operationId: stakingPostDelegatorDelegations
      parameters:
      - description: DelegateRequest request with signed transaction
        in: body
        name: postRequest
        required: true
        schema:
          $ref: '#/definitions/rest.DelegateRequest'
      - description: Bech32 AccAddress of Delegator
        in: path
        name: delegatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.MsgDelegate'
            type: array
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Submit delegation
      tags:
      - Staking
  /staking/delegators/{delegatorAddr}/delegations/{validatorAddr}:
    get:
      consumes:
      - application/json
      description: Query the current delegation between a delegator and a validator
      operationId: stakingGetDelegaton
      parameters:
      - description: Bech32 AccAddress of Delegator
        in: path
        name: delegatorAddr
        required: true
        type: string
      - description: Bech32 OperatorAddress of validator
        in: path
        name: validatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Delegation'
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Query the current delegation between a delegator and a validator
      tags:
      - Staking
  /staking/delegators/{delegatorAddr}/redelegations:
    post:
      consumes:
      - application/json
      description: Submit a redelegation
      operationId: stakingPostRedelegations
      parameters:
      - description: RedelegateRequest request with signed transaction
        in: body
        name: postRequest
        required: true
        schema:
          $ref: '#/definitions/rest.RedelegateRequest'
      - description: Bech32 AccAddress of Delegator
        in: path
        name: delegatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/rest.TxBeginRedelegate'
            type: array
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Submit a redelegation
      tags:
      - Staking
  /staking/delegators/{delegatorAddr}/txs:
    get:
      consumes:
      - application/json
      description: Query all staking txs (msgs) from a delegator
      operationId: stakingGetDelegatorTxs
      parameters:
      - description: Bech32 AccAddress of Delegator
        in: path
        name: delegatorAddr
        required: true
        type: string
      - description: 'Unbonding types via space: bond unbond redelegate'
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.SearchTxsResult'
            type: array
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Query all staking txs (msgs) from a delegator
      tags:
      - Staking
  /staking/delegators/{delegatorAddr}/unbonding_delegations:
    get:
      consumes:
      - application/json
      description: Get all unbonding delegations from a delegator
      operationId: stakingGetDelegatorUnbondingDelegations
      parameters:
      - description: Bech32 AccAddress of Delegator
        in: path
        name: delegatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.UnbondingDelegation'
            type: array
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Get all unbonding delegations from a delegator
      tags:
      - Staking
    post:
      consumes:
      - application/json
      description: Submit an unbonding delegation
      operationId: stakingPostUnbondingDelegations
      parameters:
      - description: RedelegateRequest request with signed transaction
        in: body
        name: postRequest
        required: true
        schema:
          $ref: '#/definitions/rest.UndelegateRequest'
      - description: Bech32 AccAddress of Delegator
        in: path
        name: delegatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/rest.TxUndelegate'
            type: array
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Submit an unbonding delegation
      tags:
      - Staking
  /staking/delegators/{delegatorAddr}/unbonding_delegations/{validatorAddr}:
    get:
      consumes:
      - application/json
      description: Query all unbonding delegations between a delegator and a validator
      operationId: stakingGetUnbondingDelegation
      parameters:
      - description: Bech32 AccAddress of Delegator
        in: path
        name: delegatorAddr
        required: true
        type: string
      - description: Bech32 OperatorAddress of validator
        in: path
        name: validatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.UnbondingDelegation'
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Query all unbonding delegations between a delegator and a validator
      tags:
      - Staking
  /staking/delegators/{delegatorAddr}/validators:
    get:
      consumes:
      - application/json
      description: Query all validators that a delegator is bonded to
      operationId: stakingGetDelegatorValidators
      parameters:
      - description: Bech32 AccAddress of Delegator
        in: path
        name: delegatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Validator'
            type: array
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Query all validators that a delegator is bonded to
      tags:
      - Staking
  /staking/delegators/{delegatorAddr}/validators/{validatorAddr}:
    get:
      consumes:
      - application/json
      description: Query a validator that a delegator is bonded to
      operationId: stakingGetDelegatorValidator
      parameters:
      - description: Bech32 AccAddress of Delegator
        in: path
        name: delegatorAddr
        required: true
        type: string
      - description: Bech32 ValAddress of Delegator
        in: path
        name: validatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Validator'
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Query a validator that a delegator is bonded to
      tags:
      - Staking
  /staking/historical_info/{height}:
    get:
      consumes:
      - application/json
      description: Query historical info at a given height
      operationId: stakingGetHistoricalInfo
      parameters:
      - description: block height
        in: path
        name: height
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.HistoricalInfo'
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Query historical info at a given height
      tags:
      - Staking
  /staking/parameters:
    get:
      consumes:
      - application/json
      description: Get the current staking parameter values
      operationId: stakingGetParams
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Params'
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Get the current staking parameter values
      tags:
      - Staking
  /staking/pool:
    get:
      consumes:
      - application/json
      description: Get the current state of the staking pool
      operationId: stakingGetPool
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Pool'
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Get the current state of the staking pool
      tags:
      - Staking
  /staking/redelegations:
    get:
      consumes:
      - application/json
      description: Get all redelegations (filter by query params)
      operationId: stakingGetRedelegations
      parameters:
      - description: Bech32 AccAddress of Delegator
        in: query
        name: delegator
        type: string
      - description: Bech32 AccAddress of SrcValidator
        in: query
        name: validator_from
        type: string
      - description: Bech32 AccAddress of DstValidator
        in: query
        name: validator_to
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.RedelegationResponse'
            type: array
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Get all redelegations (filter by query params)
      tags:
      - Staking
  /staking/validators:
    get:
      consumes:
      - application/json
      description: Get all validator candidates. By default it returns only the bonded validators
      operationId: stakingGetValidators
      parameters:
      - description: The validator bond status. Must be either 'bonded', 'unbonded', or 'unbonding'
        in: query
        name: status
        type: string
      - description: The page number
        in: query
        name: page
        type: string
      - description: The maximum number of items per page
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Validator'
            type: array
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Get all validator candidates. By default it returns only the bonded validators
      tags:
      - Staking
  /staking/validators/{validatorAddr}:
    get:
      consumes:
      - application/json
      description: Query the information from a single validator
      operationId: stakingGetValidator
      parameters:
      - description: Bech32 ValAddress
        in: path
        name: validatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Validator'
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Query the information from a single validator
      tags:
      - Staking
  /staking/validators/{validatorAddr}/delegations:
    get:
      consumes:
      - application/json
      description: Get the current delegations for the validator
      operationId: stakingGetValidatorDelegations
      parameters:
      - description: Bech32 ValAddress
        in: path
        name: validatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.DelegationResponse'
            type: array
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Get the current delegations for the validator
      tags:
      - Staking
  /staking/validators/{validatorAddr}/unbonding_delegations:
    get:
      consumes:
      - application/json
      description: Get the current unbonding information for the validator
      operationId: stakingGetValidatorUnbondingDelegation
      parameters:
      - description: Bech32 ValAddress
        in: path
        name: validatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.UnbondingDelegation'
            type: array
        "400":
          description: Returned if the request doesn't have valid query params
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Get the current unbonding information for the validator
      tags:
      - Staking
  /supply/total:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Supply'
        "500":
          description: Internal Server Error
      summary: Total supply of coins in the chain
      tags:
      - Supply
  /supply/total/{denomination}:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Invalid coin denomination
        "500":
          description: Internal Server Error
      summary: Total supply of a single coin denomination
      tags:
      - Supply
    parameters:
    - description: Coin denomination
      in: path
      name: denomination
      required: true
      type: string
      x-example: uatom
  /syncing:
    get:
      description: Get if the node is currently syning with other nodes
      produces:
      - application/json
      responses:
        "200":
          description: Node syncing status
          schema:
            properties:
              syncing:
                type: boolean
            type: object
        "500":
          description: Server internal error
      summary: Syncing state of node
      tags:
      - Tendermint RPC
  /txs:
    get:
      description: Search transactions by events.
      parameters:
      - description: 'transaction events such as ''message.action=send'' which results in the following endpoint: ''GET /txs?message.action=send''. note that each module documents its own events. look for xx_events.md in the corresponding cosmos-sdk/docs/spec directory'
        in: query
        name: message.action
        type: string
        x-example: send
      - description: 'transaction tags with sender: ''GET /txs?message.action=send&message.sender=cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv'''
        in: query
        name: message.sender
        type: string
        x-example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
      - description: Page number
        in: query
        name: page
        type: integer
        x-example: 1
      - description: Maximum number of items per page
        in: query
        name: limit
        type: integer
        x-example: 1
      - description: transactions on blocks with height greater or equal this value
        in: query
        name: tx.minheight
        type: integer
        x-example: 25
      - description: transactions on blocks with height less than or equal this value
        in: query
        name: tx.maxheight
        type: integer
        x-example: 800000
      produces:
      - application/json
      responses:
        "200":
          description: All txs matching the provided events
          schema:
            $ref: '#/definitions/PaginatedQueryTxs'
        "400":
          description: Invalid search events
        "500":
          description: Internal Server Error
      summary: Search transactions
      tags:
      - Transactions
    post:
      consumes:
      - application/json
      description: Broadcast a signed tx to a full node
      parameters:
      - description: The tx must be a signed StdTx. The supported broadcast modes include `"block"`(return after tx commit), `"sync"`(return afer CheckTx) and `"async"`(return right away).
        in: body
        name: txBroadcast
        required: true
        schema:
          properties:
            mode:
              example: block
              type: string
            tx:
              $ref: '#/definitions/StdTx'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Tx broadcasting result
          schema:
            $ref: '#/definitions/BroadcastTxCommitResult'
        "500":
          description: Internal Server Error
      summary: Broadcast a signed tx
      tags:
      - Transactions
  /txs/{hash}:
    get:
      description: Retrieve a transaction using its hash.
      parameters:
      - description: Tx hash
        in: path
        name: hash
        required: true
        type: string
        x-example: BCBE20E8D46758B96AE5883B792858296AC06E51435490FBDCAE25A72B3CC76B
      produces:
      - application/json
      responses:
        "200":
          description: Tx with the provided hash
          schema:
            $ref: '#/definitions/TxQuery'
        "500":
          description: Internal Server Error
      summary: Get a Tx by hash
      tags:
      - Transactions
  /txs/decode:
    post:
      consumes:
      - application/json
      description: Decode a transaction (signed or not) from base64-encoded Amino serialized bytes to JSON
      parameters:
      - description: The tx to decode
        in: body
        name: tx
        required: true
        schema:
          properties:
            tx:
              example: SvBiXe4KPqijYZoKFFHEzJ8c2HPAfv2EFUcIhx0yPagwEhTy0vPA+GGhCEslKXa4Af0uB+mfShoMCgVzdGFrZRIDMTAwEgQQwJoM
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: The tx was successfully decoded
          schema:
            $ref: '#/definitions/StdTx'
        "400":
          description: The tx was malformated
        "500":
          description: Server internal error
      summary: Decode a transaction from the Amino wire format
      tags:
      - Transactions
  /txs/encode:
    post:
      consumes:
      - application/json
      description: Encode a transaction (signed or not) from JSON to base64-encoded Amino serialized bytes
      parameters:
      - description: The tx to encode
        in: body
        name: tx
        required: true
        schema:
          properties:
            tx:
              $ref: '#/definitions/StdTx'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: The tx was successfully decoded and re-encoded
          schema:
            properties:
              tx:
                example: The base64-encoded Amino-serialized bytes for the tx
                type: string
            type: object
        "400":
          description: The tx was malformated
        "500":
          description: Server internal error
      summary: Encode a transaction to the Amino wire format
      tags:
      - Transactions
  /validatorsets/{height}:
    get:
      parameters:
      - description: Block height
        in: path
        name: height
        required: true
        type: number
        x-example: 1
      produces:
      - application/json
      responses:
        "200":
          description: The validator set at a specific block height
          schema:
            properties:
              block_height:
                type: string
              validators:
                items:
                  $ref: '#/definitions/TendermintValidator'
                type: array
            type: object
        "400":
          description: Invalid height
        "404":
          description: Block at height not available
        "500":
          description: Server internal error
      summary: Get a validator set a certain height
      tags:
      - Tendermint RPC
  /validatorsets/latest:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: The validator set at the latest block height
          schema:
            properties:
              block_height:
                type: string
              validators:
                items:
                  $ref: '#/definitions/TendermintValidator'
                type: array
            type: object
        "500":
          description: Server internal error
      summary: Get the latest validator set
      tags:
      - Tendermint RPC
schemes:
- https
securityDefinitions:
  kms:
    type: basic
swagger: "2.0"
tags:
- description: Search, encode, or broadcast transactions.
  name: Transactions
- description: Tendermint APIs, such as query blocks, transactions and validatorset
  name: Tendermint RPC
- description: Authenticate accounts
  name: Auth
- description: Create and broadcast transactions
  name: Bank
- description: Stake module APIs
  name: Staking
- description: Governance module APIs
  name: Governance
- description: Slashing module APIs
  name: Slashing
- description: Fee distribution module APIs
  name: Distribution
- description: Supply module APIs
  name: Supply
- name: version
- description: Minting module APIs
  name: Mint
- description: Query app version
  name: Misc
